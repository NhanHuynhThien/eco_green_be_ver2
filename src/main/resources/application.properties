# ==========================
# Application Settings
# ==========================
spring.application.name=EV Dealer Management System
server.port=${PORT:8080}
server.servlet.context-path=/
server.forward-headers-strategy=framework

# ==========================
# Database Configuration (Railway MySQL)
# ==========================
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ==========================
# HikariCP Connection Pool (Optimized for Railway)
# ==========================
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.keepalive-time=20000
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.initialization-fail-timeout=-1
# Additional Railway-specific settings
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.connection-init-sql=SELECT 1

# ==========================
# JPA / Hibernate Configuration
# ==========================
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.open-in-view=false

# Fix deprecated MySQL8Dialect warning
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# Connection handling improvements
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=false
spring.jpa.properties.hibernate.connection.handling_mode=delayed_acquisition_and_release_after_transaction

# Query optimization
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.jdbc.fetch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# Disable second-level cache (if not using)
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false

# ==========================
# JWT Configuration
# ==========================
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION:10800000}

# ==========================
# Google Cloud & Gemini AI Configuration
# ==========================
google.cloud.project-id=${GOOGLE_CLOUD_PROJECT_ID}
google.cloud.location=${GOOGLE_CLOUD_LOCATION:us-central1}
google.application.credentials=${GOOGLE_APPLICATION_CREDENTIALS:}

# Gemini AI Settings
gemini.model=${GEMINI_MODEL:gemini-2.5-flash}
gemini.api-key=${GEMINI_API_KEY}
gemini.max-tokens=${GEMINI_MAX_TOKENS:4096}
gemini.temperature=${GEMINI_TEMPERATURE:0.5}

# ==========================
# OAuth2 - Facebook Configuration
# ==========================
spring.security.oauth2.client.registration.facebook.client-id=${FACEBOOK_CLIENT_ID}
spring.security.oauth2.client.registration.facebook.client-secret=${FACEBOOK_CLIENT_SECRET}
spring.security.oauth2.client.registration.facebook.scope=email,public_profile
spring.security.oauth2.client.registration.facebook.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.facebook.client-name=Facebook

spring.security.oauth2.client.provider.facebook.authorization-uri=https://www.facebook.com/v23.0/dialog/oauth
spring.security.oauth2.client.provider.facebook.token-uri=https://graph.facebook.com/v23.0/oauth/access_token
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/v23.0/me?fields=id,name,email,picture
spring.security.oauth2.client.provider.facebook.user-name-attribute=id

# ==========================
# OAuth2 - Google Configuration
# ==========================
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,email,profile
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.client-name=Google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# ==========================
# Redis Configuration (Railway)
# ==========================
spring.data.redis.host=${REDISHOST:localhost}
spring.data.redis.port=${REDISPORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.username=${REDISUSER:default}
spring.data.redis.ssl.enabled=${REDIS_SSL_ENABLED:false}
spring.data.redis.timeout=60000ms

# Redis Connection Pool
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=2
spring.data.redis.lettuce.pool.max-wait=-1ms
spring.data.redis.lettuce.shutdown-timeout=100ms

# ==========================
# Cloudinary Configuration
# ==========================
cloudinary.cloud_name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api_key=${CLOUDINARY_API_KEY}
cloudinary.api_secret=${CLOUDINARY_API_SECRET}

# ==========================
# File Upload Configuration
# ==========================
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# ==========================
# Logging Configuration
# ==========================
logging.level.root=INFO
logging.level.com.evdealer=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.springframework.security=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.google.cloud=INFO
logging.level.com.zaxxer.hikari=DEBUG

# ==========================
# Actuator / Health Check
# ==========================
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# ==========================
# Additional Performance Settings
# ==========================
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,application/javascript,application/json
server.error.include-message=always
server.error.include-binding-errors=always

# ==========================
# VNPay Configuration
# ==========================
vnpay.tmn-code=${VNP_TMNCODE}
vnpay.hash-secret=${VNP_HASH_SECRET}
vnpay.pay-url=${VNP_PAY_URL}
vnpay.api-url=${VNP_API_URL}
vnpay.return-url=${VNP_RETURN_URL}

# ==========================
# Momo Configuration
# ==========================
momo.partnerCode=${MOMO_PARTNER_CODE}
momo.accessKey=${MOMO_ACCESS_KEY}
momo.secretKey=${MOMO_SECRET_KEY}
momo.redirectUrl=${MOMO_REDIRECT_URL}
momo.ipnUrl=${MOMO_IPN_URL}
momo.requestType=${MOMO_REQUEST_TYPE}

# Frontend URL configuration
frontend.url=${FRONTEND_URL:http://localhost:5173}

# ==========================
# Spring Mail Configuration
# ==========================
# Spring Mail
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.from=${MAIL_FROM}
spring.mail.from.name=${MAIL_FROM_NAME}


# ==========================
# Eversign Configuration
# ==========================
EVERSIGN_API_KEY=${EVERSIGN_ACCESS_KEY}
EVERSIGN_BUSINESS_ID=${EVERSIGN_BUSINESS_ID}
EVERSIGN_TEMPLATE_ID=${EVERSIGN_TEMPLATE_ID}
EVERSIGN_SANDBOX=${EVERSIGN_SANDBOX:true}

# ==========================
# Application URL Configuration
# ==========================
APP_BASE_URL=${FRONTEND_URL:http://localhost:5173}

# ==========================
# Thymeleaf Email Templates
# ==========================
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false

# ==========================
# Async Email Configuration
# ==========================
spring.task.execution.pool.core-size=2
spring.task.execution.pool.max-size=5
spring.task.execution.pool.queue-capacity=100
spring.task.execution.thread-name-prefix=async-email-s